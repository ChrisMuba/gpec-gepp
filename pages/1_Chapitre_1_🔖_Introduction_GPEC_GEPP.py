#!/usr/bin/env python
# coding: utf-8

# In[ ]:


import streamlit as st

st.sidebar.success("Cliquez sur un :blue[chapitre] ou un :blue[quiz]")

import pandas as pd

st.markdown("# Chapitre 1")
st.sidebar.markdown("# Chapitre 1")

st.title("Introduction √† la GPEC, GEPP et √† la planification strat√©gique")

st.markdown("La **GPEC** (Gestion Pr√©visionnelle des Emplois et des Comp√©tences) et la **GEPP** (Gestion des Emplois et des Parcours Professionnels) sont deux d√©marches de GRH qui visent √† anticiper les besoins futurs en comp√©tences et en effectifs au sein d'une organisation.")

st.markdown("Alors que la :blue[GPEC] est une d√©marche plus globale qui vise √† mettre en ad√©quation les effectifs, les emplois et les comp√©tences avec les objectifs strat√©giques et l'environnement externe de l'entreprise ; La :blue[GEPP] va √™tre une d√©marche plus focalis√©e sur les parcours professionnels des salari√©s actuels de l'entreprise. Elle visera √† favoriser l'√©volution professionnelle des salari√©s en fonction de leurs comp√©tences et de leurs aspirations.")

st.markdown("")

if st.button("Cliquez pour acceder au Chap.1 - **A/ √âtapes de la GPEC et de la GEPP**"):
    st.subheader("üìóChap.1-A/ √âtapes de la GPEC et de la GEPPüìò")

    st.subheader("Etapes de la :blue[GPEC] :")
    
    st.markdown("- **Analyse de l'environnement** : analyse des √©volutions √©conomiques, technologiques, sociales et d√©mographiques qui impacteront les besoins futurs en comp√©tences.")
    st.markdown("- **√âvaluation des emplois** : identification des comp√©tences et des connaissances n√©cessaires pour chaque emploi.")
    st.markdown("- **Planification des effectifs** : anticipation des besoins futurs en effectifs en fonction des √©volutions des emplois.")
    st.markdown("- **D√©veloppement des comp√©tences** : mise en place des actions de formation et de d√©veloppement des comp√©tences pour adapter les salari√©s aux besoins futurs.")
    
    st.markdown("")

    st.subheader("Etapes de la :blue[GEPP] :")
    
    st.markdown("- **Accompagnement des parcours professionnels** : mise en place des outils et des dispositifs pour identifier les comp√©tences des salari√©s et accompagner la construction de leurs parcours professionnels.")
    st.markdown("- **D√©veloppement des comp√©tences** : proposition des actions de formation et de d√©veloppement des comp√©tences pour aider les salari√©s √† √©voluer professionnellement.")
    st.markdown("- **Planification des effectifs** : favorisation de la mobilit√© professionnelle des salari√©s au sein de l'entreprise ou vers l'ext√©rieur.")


# Add the "made with ‚ù§Ô∏è by ..." text in the sidebar
with st.sidebar:
    st.write("Made with ‚ù§Ô∏è by Chris MUBA")
with st.sidebar:
        st.image('GIF/GIF_Chap1B.gif')

if st.button("Continuer vers la suite du Chap.1 - **B/ Planification strat√©gique**"):
    
    st.subheader("üìóChap.1-B/ Planification strat√©giqueüìò")

    st.markdown("**A/ Introduction √† la planification strat√©gique de la main-d'≈ìuvre**")

    st.markdown("La :blue[planification strat√©gique des effectifs] est un aspect crucial de la gestion moderne des RH. Il s'agit d'un processus syst√©matique et ax√© sur les :blue[donn√©es] qui garantit que la main-d'≈ìuvre d'une organisation est align√©e sur ses objectifs strat√©giques et ses buts futurs. Dans un paysage d'entreprise en constante √©volution, o√π les talents sont une ressource pr√©cieuse, la planification strat√©gique des effectifs permet aux RH de relever de mani√®re proactive les probl√®mes de la main-d'≈ìuvre, d'optimiser l'utilisation des talents et de se pr√©parer pour l'avenir.")

    st.markdown("")
    
    st.markdown("**B/ Qu'est-ce que la planification strat√©gique de la main-d'≈ìuvre**")
    
    st.markdown("La planification strat√©gique de la main-d'≈ìuvre peut √™tre d√©finie comme un processus actif d'**analyse**, de **pr√©vision** et d'**alignement des effectifs** d'une organisation pour atteindre ses buts et objectifs strat√©giques.") 
    
    st.markdown("Elle va au-del√† des fonctions traditionnelles des RH et se concentre sur la situation dans son ensemble. La planification strat√©gique de la main-d'≈ìuvre consiste √† **comprendre les effectifs actuels d'une organisation, √† √©valuer ses capacit√©s et √† anticiper les comp√©tences et les talents n√©cessaires pour assurer le succ√®s futur de l'entreprise**.") 
    
    st.markdown("En substance, **la planification strat√©gique vise √† faire en sorte qu'une organisation ait les bonnes personnes au bon endroit au bon moment**.")

    st.markdown("")
    
    
if st.button("Continuer vers la suite du Chap.1 - **C/ R√¥le des RH dans la planification strat√©gique**"):
    
    st.subheader("üìóChap.1-C/ RH et planification strat√©giqueüìò")
    
    st.markdown("**Historiquement, les RH √©taient consid√©r√©es avant tout comme une fonction administrative**, responsable du recrutement, de la formation et de la gestion du personnel.") 
    
    st.markdown("Toutefois, dans l'environnement concurrentiel d'aujourd'hui, les RH sont devenues un **partenaire strat√©gique** au sein des organisations. Les RH ne sont plus confin√©s aux questions de routine du personnel; ils jouent un r√¥le essentiel dans l'√©laboration de la strat√©gie globale de l'entreprise.") 
    
    st.markdown("La planification strat√©gique de la main-d'≈ìuvre t√©moigne de cette transformation, car elle place les ressources humaines au c≈ìur de la prise de d√©cisions strat√©giques.") 


    
    
    st.markdown("Pour y arriver ils peuvent : ") 
                
    st.markdown("- **Cr√©er des indicateurs** : concernant par exemple le **suivi des effectifs**, la **pyramide des √¢ges**, la **pyramide des anciennet√©s**, le **suivi de la masse salariale**, le **suivi du turn-over**, le **suivi de l'absent√©isme**, la **qualit√© du recrutement**, le **climat interne**, etc...") 

    st.markdown("*üìåLes possibilit√©s de cr√©ation d'indicateurs RH sont nombreuses et d√©pendent des objectifs suivis par l'entreprise et des donn√©es √† disposition.*")

    st.markdown("")

    st.markdown("- **Cr√©er des tableaux de bord** : apr√®s avoir d√©fini les indicateurs RH √† suivre et collect√© les donn√©es appropri√©es, nous pouvons cr√©er un tableau de bord automatis√© qui rassemblera et facilitera le suivi en temps r√©el de nos indicateurs.")

    st.markdown("üìå*Les outils pour cr√©er des tableaux de bords RH sont nombreux : parmi les solutions ¬´ presse-bouton ¬ª mais peu flexibles certaines bien rod√©es sont Power BI, Tableau, Qlik ou Looker Studio ; en revanche si on sait √©crire du code, les possibilit√©s sont presque sans limites avec Streamlit (framework Pythonüêç), Flexdashboard (framework R), Shiny (R / Pythonüêç), etc... .*")


    st.markdown("")


    st.markdown("Ci-dessous un :blue[exemple de **tableau de bord RH**] √† 4 onglets :") 
    
    st.markdown("- Suivi de la masse salariale") 
    st.markdown("- Pyramide des √¢ges") 
    st.markdown("- R√©partition H/F")
    st.markdown("- Salaire moyen H/F")

    import streamlit as st
    import pandas as pd
    import numpy as np
    import plotly.graph_objs as go
    import plotly.express as px
   

# Line Plot
    # Monthly payroll data (in thousands of dollars)
    forecast_months_2023 = ['janvier', 'f√©vrier', 'mars', 'avril', 'mai', 'juin', 'juillet', 'ao√ªt', 'septembre', 'octobre', 'novembre', 'd√©cembre']
    r√©alis√©_months_2023 = ['janvier', 'f√©vrier', 'mars', 'avril', 'mai', 'juin', 'juillet', 'ao√ªt']

    forecast_2023 = [1154300, 1200010, 1235205, 1305008, 1778120, 1263150, 1208180, 1240000, 1275002, 1299250, 2356280, 1251300]
    r√©alis√©_2023 = [1152003, 1185350, 1113880, 1205008, 1677420, 1121245, 1148000, 1165000]

# Create a dataframe for plotting
    df = pd.DataFrame({'mois': forecast_months_2023 + r√©alis√©_months_2023,
                       'forecast 2023 (pr√©vision)': forecast_2023 + [None] * len(r√©alis√©_months_2023),
                       'r√©alis√© 2023': [None] * len(forecast_months_2023) + r√©alis√©_2023})

# Create an interactive line plot
    fig_1 = px.line(df, x='mois', y=['forecast 2023 (pr√©vision)', 'r√©alis√© 2023'],
                    labels={'value': 'masse salariale brute (millions ‚Ç¨)'},
                    title='suivi de la masse salariale (pr√©vision 2023 vs. r√©alis√© 2023)')

# Customize line colors
    fig_1.update_traces(line_color='red', selector=dict(name='forecast 2023 (pr√©vision)'))
    fig_1.update_traces(line_color='blue', selector=dict(name='r√©alis√© 2023'))

# Display the line plot
  #st.plotly_chart(fig_1)
    

    st.markdown("")


# Age Pyramid
# Define age intervals
    age_intervals = ['[ < 25]', '[25 - 29]', '[30 - 34]', '[35 - 39]', '[40 - 44]', '[45 - 49]', '[50 - 54]', '[55 - 59]', '[60 et +]']

# Corresponding y values for the intervals
    y = list(range(len(age_intervals)))

    women_bins = np.array([-1686, -3868, -3463, -2346, -2074, -3037, -3495, -4194, -228])
    men_bins = np.array([887, 2013, 2323, 1842, 1645, 2270, 3115, 3891, 493])

    layout = go.Layout(
    title='Pyramide des √¢ges en pelote de laine',
    yaxis=go.layout.YAxis(title='√Çge', tickvals=y, ticktext=age_intervals),
    xaxis=go.layout.XAxis(
        range=[-5000, 5000],
        tickvals=[-4000, -2000, 0, 2000, 4000],
        ticktext=[4000, 2000, 0, 2000, 4000],
        title='Effectif'
    ),
    barmode='overlay',
    bargap=0.1
)

    data = [
    go.Bar(
        y=y,
        x=men_bins,
        orientation='h',
        name='üë¶üèø Homme',
        hoverinfo='x',
        marker=dict(color='#1f77b4')
    ),
    go.Bar(
        y=y,
        x=women_bins,
        orientation='h',
        name='üë©‚Äçü¶∞ Femme',
        text=-1 * women_bins.astype('int'),
        hoverinfo='text',
        marker=dict(color='#e377c2')
    )
]

    fig_2 = go.Figure(data=data, layout=layout)
    
    #st.plotly_chart(fig_2)


    st.markdown("")
    

# Pie Chart
    # R√©partition üë¶üèø/üë©‚Äçü¶∞

    data = ["femme", "homme", "femme", "homme", "homme"]
    colors = ['#e377c2', '#1f77b4']

    def fig_3(data, colors, title):
        gender_counts = {gender: data.count(gender) for gender in set(data)}
        labels = list(gender_counts.keys())
        values = list(gender_counts.values())

        fig_3 = go.Figure(data=[go.Pie(labels=labels, values=values, marker=dict(colors=colors))])
        fig_3.update_layout(title=title)
        return fig_3

    fig_3 = fig_3(data, colors, "R√©partition H/F")
    #st.plotly_chart(fig_3)


# Bar Chart
    # Sample dataset
    data = {
    'Employee ID': ['001', '002', '003', '004', '005', '006', '007', '008', '009', '010'],
    'Genre': ['Hommeüë¶üèæ', 'Femmeüëß', 'Hommeüë¶üèæ', 'Femmeüëß', 'Hommeüë¶üèæ', 'Hommeüë¶üèæ', 'Femmeüëß', 'Femmeüëß', 'Hommeüë¶üèæ', 'Femmeüëß'],
    'Salaire ‚Ç¨': [55000, 60000, 65000, 58000, 70000, 62000, 56000, 59000, 75000, 61000]
    }

    df = pd.DataFrame(data)

    # Average salary by gender
    #st.markdown('**fig.2: Salaire moyen selon le genre**')
    avg_salary = df.groupby('Genre')['Salaire ‚Ç¨'].mean().reset_index()

    fig_4 = px.bar(avg_salary, x='Genre', y='Salaire ‚Ç¨', title='Comparaison du salaire moyen entre H/F', color='Genre',
                     color_discrete_map={'Hommeüë¶üèæ': '#1f77b4', 'Femmeüëß': '#e377c2'})
    #st.plotly_chart(fig_4)

    st.markdown("")


    st.markdown("")
    
    
    # Create the tabs
    tabs = st.tabs(["Suivi de la masse salariale", "Pyramide des √¢ges", "R√©partition H/F", "Salaire moyen H/F"])

# Tab 1 - Line Chart
    with tabs[0]:
        #st.write("## Line Chart")
        st.plotly_chart(fig_1)

# Tab 2 - Histogram
    with tabs[1]:
        #st.write("## Histogram")
        st.plotly_chart(fig_2)

# Tab 3 - Pie Chart
    with tabs[2]:
        #st.write("## Pie Chart")
        st.plotly_chart(fig_3)

# Tab 4 - Bar Chart
    with tabs[3]:
        #st.write("## Bar Chart")
        st.plotly_chart(fig_4)

    
    st.markdown("")


    st.markdown("")
    

    st.markdown("- **Remplir les obligations l√©gales** : notamment construire le **bilan social**, pr√©parer et mettre √† dsposition les **donn√©es necessaires √† la n√©gociation annuelle obligatoire** (NAO) ; ") 
    
    st.markdown("- Calculer l'**index √©galit√©** H/F ; effectuer la **d√©claration annuelle obligatoire d‚Äôemploi des travailleurs handicap√©s** (DOETH), etc...") 
    
    st.markdown("üöÄ**Tous ces √©l√©ments sont bas√©s sur la collecte et l'analyse de donn√©es sociales, et requi√®rent donc une excellente compr√©hension des concepts et m√©thodes statistiques**.üöÄ")


    st.markdown("")
    
    
    st.markdown("Les statistiques appliqu√©es aux RH permettent aussi la **r√©alisation d'√©tudes ponctuelles**, sur des sujets pr√©cis, pouvant conduire √† la mise en place de diverses actions correctives.")
    

    st.markdown("")


    st.markdown("")


    st.markdown("**üèÄApplication 1**")

    st.markdown("Nous menons une √©tude dans laquelle nous souhaitons comparer le nombre de jours d'absence au sein de diff√©rents services sur une p√©riode donn√©e ; et ainsi d√©celer d'√©ventuels probl√®mes de climat social au sein de certaines √©quipes.")
    
    st.markdown("Ci-dessous un √©chantillon donn√©es : ")
    

    import streamlit as st
    import pandas as pd
    import plotly.express as px
    import plotly.graph_objects as go
    import statsmodels.api as sm
    from statsmodels.formula.api import ols
    from statsmodels.stats.multicomp import pairwise_tukeyhsd

     # Sample dataset
    data = pd.read_csv('csv_files/employee_absence_data.csv')

    # Remove leading/trailing spaces from column names
    data.columns = data.columns.str.strip()

    st.markdown("**Tableau de suivi des absences des employ√©s**")

# Display the data
    st.write(data)

    st.markdown("")

    st.markdown("Nous visualisons la r√©partition des jours d'absence √† l'aide de Box Plot, qui montrent des variations d'absence selon les diff√©rents services.")

    
    fig = px.box(data, x='Department', y='Days_of_Absence', title='Box Plot : Jours d\'absence par service')
    st.plotly_chart(fig)


    # Explanation
    with st.expander("üîÆInterpretation"):
        st.write("""
        **Tableau ANOVA** : La statistique F (F) est d'environ 4.8257 et la p-value (PR(>F)) associ√©e est de 0.011, ce qui est inf√©rieur au seuil typique de significativit√© de *0.05*.
        **Cela indique qu‚Äôil existe une diff√©rence statistiquement significative dans les jours d‚Äôabsence entre au moins certains services**.

        ‚ö†Ô∏è Dans notre cas il faut compl√©ter l'analyse √† l'aide d'un **test HSD de Tukey** pour identifier quelles paires de services sp√©cifiques ont des jours d'absence moyens significativement diff√©rents,
        ce qui permettra d'orientier de fa√ßon efficiente la mise en place d'actions correctives.

        """)

    st.markdown("")

    anova_model = ols('Days_of_Absence ~ Department', data=data).fit()
    anova_table = sm.stats.anova_lm(anova_model, typ=2)

    st.markdown("Nous effectuons un test d'ANOVA unidirectionnel pour v√©rifier s'il existe des diff√©rences significatives dans les jours d'absence entre les d√©partements. Si la valeur p est inf√©rieure √† 0.05, on peut conclure qu‚Äôau moins un service est significativement diff√©rent des autres.")
    
    st.write("Table d\'ANOVA:")
    st.write(anova_table)

    st.markdown("")

    st.markdown("")

    st.markdown("üìå *Les possibilit√©s de sujets d'√©tudes statistiques sont tr√®s nombreuses en RH et d√©pendent des probl√©matiques et objectifs propres √† chaque entreprises* :")

    st.markdown("1. :blue[**Engagement des employ√©s** :] Mesurer et analyser les niveaux d'engagement des employ√©s peut aider les entreprises √† identifier les domaines dans lesquels elles peuvent **am√©liorer la satisfaction et la productivit√© des employ√©s**.")

    st.markdown("2. :blue[**Acquisition de talents** :] Aider les entreprises √† comprendre leur processus d'embauche et √† identifier les domaines dans lesquels il peut √™tre am√©lior√©. Cela peut inclure des √©tudes sur l'efficacit√© des diff√©rents canaux de recrutement, le temps qu'il faut pour embaucher pour diff√©rents postes, le co√ªt de l'embauche de nouveaux employ√©s, etc...")
                
    st.markdown("3. :blue[**Fid√©lisation des employ√©s** :] Aider les entreprises √† comprendre pourquoi les employ√©s quittent leur emploi et √† **identifier des moyens pour r√©duire le turnover**. Cela peut inclure des √©tudes sur les diff√©rentes raisons de d√©part, **le co√ªt du turnover, l'impact du turnover sur les r√©sultats financiers de l'entreprise**, etc...")

    st.markdown("4. :blue[**R√©mun√©ration et avantages sociaux** :] S'assurer que les entreprises offrent des packages de r√©mun√©ration et avantages sociaux comp√©titifs. Cela peut inclure des √©tudes sur les salaires et les avantages sociaux du march√©, la satisfaction des employ√©s √† l'√©gard de la r√©mun√©ration et des avantages sociaux, et **l'impact de la r√©mun√©ration et des avantages sociaux sur la fid√©lisation des employ√©s**, etc...")

    st.markdown("5. :blue[**Formation et d√©veloppement des comp√©tences** :] Aider les entreprises √† √©valuer l'efficacit√© de leurs programmes de formation et de d√©veloppement des comp√©tences. Cela peut inclure des √©tudes sur la satisfaction des employ√©s √† l'√©gard des programmes de formation et de d√©veloppement des comp√©tences, **l'impact de ces programmes sur les performances des employ√©s et le retour sur investissement des programmes de formation et de d√©veloppement**.")

    st.markdown("6. :blue[**Commentaires et communication des employ√©s** :] Examiner l'efficacit√© des canaux de r√©troaction et de communication au sein de l'entreprise et identifier les opportunit√©s d'am√©lioration en favorisant un environnement de travail transparent et collaboratif.")

    st.markdown("7. :blue[etc...]")

    st.markdown("")

    st.markdown("Ce ne sont l√† que quelques exemples d‚Äô√©tudes RH qui peuvent √™tre men√©es en entreprise. Les √©tudes sp√©cifiques les plus pertinentes d√©pendront des besoins de l‚Äôentreprise.")

    st.markdown("")

    #url = "https://cours-stats-rh.streamlit.app/Quiz_1_-_Introduction_aux_Statistiquesüìâ"
    #st.write("Acceder au quiz du chapitre 1 [ici](%s)" % url)

    def redirect_button(url: str, text: str= None, color="#FD504D"):
        st.markdown(
        f"""
        <a href="{url}" target="_blank">
            <div style="
                display: inline-block;
                padding: 0.5em 1em;
                color: #FFFFFF;
                background-color: {color};
                border-radius: 3px;
                text-decoration: none;">
                {text}
            </div
        </a>
        """,
        unsafe_allow_html=True
        )
    redirect_button("https://cours-stats-rh.streamlit.app/Quiz_1_-_Introduction_aux_Statistiquesüìâ","Quiz du chapitre 1")


                
    



    
   




    



    



